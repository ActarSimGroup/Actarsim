//
// File generated by rootcint at Fri Jun  6 16:46:14 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ActarSimDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ActarSimDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ActarSimData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ActarSimData(void *p = 0);
   static void *newArray_ActarSimData(Long_t size, void *p);
   static void delete_ActarSimData(void *p);
   static void deleteArray_ActarSimData(void *p);
   static void destruct_ActarSimData(void *p);
   static void streamer_ActarSimData(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ActarSimData*)
   {
      ::ActarSimData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ActarSimData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ActarSimData", ::ActarSimData::Class_Version(), "../include/ActarSimData.hh", 28,
                  typeid(::ActarSimData), DefineBehavior(ptr, ptr),
                  &::ActarSimData::Dictionary, isa_proxy, 0,
                  sizeof(::ActarSimData) );
      instance.SetNew(&new_ActarSimData);
      instance.SetNewArray(&newArray_ActarSimData);
      instance.SetDelete(&delete_ActarSimData);
      instance.SetDeleteArray(&deleteArray_ActarSimData);
      instance.SetDestructor(&destruct_ActarSimData);
      instance.SetStreamerFunc(&streamer_ActarSimData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ActarSimData*)
   {
      return GenerateInitInstanceLocal((::ActarSimData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ActarSimData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ActarSimTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ActarSimTrack(void *p = 0);
   static void *newArray_ActarSimTrack(Long_t size, void *p);
   static void delete_ActarSimTrack(void *p);
   static void deleteArray_ActarSimTrack(void *p);
   static void destruct_ActarSimTrack(void *p);
   static void streamer_ActarSimTrack(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ActarSimTrack*)
   {
      ::ActarSimTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ActarSimTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ActarSimTrack", ::ActarSimTrack::Class_Version(), "../include/ActarSimTrack.hh", 29,
                  typeid(::ActarSimTrack), DefineBehavior(ptr, ptr),
                  &::ActarSimTrack::Dictionary, isa_proxy, 0,
                  sizeof(::ActarSimTrack) );
      instance.SetNew(&new_ActarSimTrack);
      instance.SetNewArray(&newArray_ActarSimTrack);
      instance.SetDelete(&delete_ActarSimTrack);
      instance.SetDeleteArray(&deleteArray_ActarSimTrack);
      instance.SetDestructor(&destruct_ActarSimTrack);
      instance.SetStreamerFunc(&streamer_ActarSimTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ActarSimTrack*)
   {
      return GenerateInitInstanceLocal((::ActarSimTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ActarSimTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ActarSimSimpleTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ActarSimSimpleTrack(void *p = 0);
   static void *newArray_ActarSimSimpleTrack(Long_t size, void *p);
   static void delete_ActarSimSimpleTrack(void *p);
   static void deleteArray_ActarSimSimpleTrack(void *p);
   static void destruct_ActarSimSimpleTrack(void *p);
   static void streamer_ActarSimSimpleTrack(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ActarSimSimpleTrack*)
   {
      ::ActarSimSimpleTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ActarSimSimpleTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ActarSimSimpleTrack", ::ActarSimSimpleTrack::Class_Version(), "../include/ActarSimSimpleTrack.hh", 25,
                  typeid(::ActarSimSimpleTrack), DefineBehavior(ptr, ptr),
                  &::ActarSimSimpleTrack::Dictionary, isa_proxy, 0,
                  sizeof(::ActarSimSimpleTrack) );
      instance.SetNew(&new_ActarSimSimpleTrack);
      instance.SetNewArray(&newArray_ActarSimSimpleTrack);
      instance.SetDelete(&delete_ActarSimSimpleTrack);
      instance.SetDeleteArray(&deleteArray_ActarSimSimpleTrack);
      instance.SetDestructor(&destruct_ActarSimSimpleTrack);
      instance.SetStreamerFunc(&streamer_ActarSimSimpleTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ActarSimSimpleTrack*)
   {
      return GenerateInitInstanceLocal((::ActarSimSimpleTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ActarSimSimpleTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ActarSimSciHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ActarSimSciHit(void *p = 0);
   static void *newArray_ActarSimSciHit(Long_t size, void *p);
   static void delete_ActarSimSciHit(void *p);
   static void deleteArray_ActarSimSciHit(void *p);
   static void destruct_ActarSimSciHit(void *p);
   static void streamer_ActarSimSciHit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ActarSimSciHit*)
   {
      ::ActarSimSciHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ActarSimSciHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ActarSimSciHit", ::ActarSimSciHit::Class_Version(), "../include/ActarSimSciHit.hh", 22,
                  typeid(::ActarSimSciHit), DefineBehavior(ptr, ptr),
                  &::ActarSimSciHit::Dictionary, isa_proxy, 0,
                  sizeof(::ActarSimSciHit) );
      instance.SetNew(&new_ActarSimSciHit);
      instance.SetNewArray(&newArray_ActarSimSciHit);
      instance.SetDelete(&delete_ActarSimSciHit);
      instance.SetDeleteArray(&deleteArray_ActarSimSciHit);
      instance.SetDestructor(&destruct_ActarSimSciHit);
      instance.SetStreamerFunc(&streamer_ActarSimSciHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ActarSimSciHit*)
   {
      return GenerateInitInstanceLocal((::ActarSimSciHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ActarSimSciHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ActarSimSilHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ActarSimSilHit(void *p = 0);
   static void *newArray_ActarSimSilHit(Long_t size, void *p);
   static void delete_ActarSimSilHit(void *p);
   static void deleteArray_ActarSimSilHit(void *p);
   static void destruct_ActarSimSilHit(void *p);
   static void streamer_ActarSimSilHit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ActarSimSilHit*)
   {
      ::ActarSimSilHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ActarSimSilHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ActarSimSilHit", ::ActarSimSilHit::Class_Version(), "../include/ActarSimSilHit.hh", 22,
                  typeid(::ActarSimSilHit), DefineBehavior(ptr, ptr),
                  &::ActarSimSilHit::Dictionary, isa_proxy, 0,
                  sizeof(::ActarSimSilHit) );
      instance.SetNew(&new_ActarSimSilHit);
      instance.SetNewArray(&newArray_ActarSimSilHit);
      instance.SetDelete(&delete_ActarSimSilHit);
      instance.SetDeleteArray(&deleteArray_ActarSimSilHit);
      instance.SetDestructor(&destruct_ActarSimSilHit);
      instance.SetStreamerFunc(&streamer_ActarSimSilHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ActarSimSilHit*)
   {
      return GenerateInitInstanceLocal((::ActarSimSilHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ActarSimSilHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ActarSimParisHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ActarSimParisHit(void *p = 0);
   static void *newArray_ActarSimParisHit(Long_t size, void *p);
   static void delete_ActarSimParisHit(void *p);
   static void deleteArray_ActarSimParisHit(void *p);
   static void destruct_ActarSimParisHit(void *p);
   static void streamer_ActarSimParisHit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ActarSimParisHit*)
   {
      ::ActarSimParisHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ActarSimParisHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ActarSimParisHit", ::ActarSimParisHit::Class_Version(), "../include/ActarSimParisHit.hh", 23,
                  typeid(::ActarSimParisHit), DefineBehavior(ptr, ptr),
                  &::ActarSimParisHit::Dictionary, isa_proxy, 0,
                  sizeof(::ActarSimParisHit) );
      instance.SetNew(&new_ActarSimParisHit);
      instance.SetNewArray(&newArray_ActarSimParisHit);
      instance.SetDelete(&delete_ActarSimParisHit);
      instance.SetDeleteArray(&deleteArray_ActarSimParisHit);
      instance.SetDestructor(&destruct_ActarSimParisHit);
      instance.SetStreamerFunc(&streamer_ActarSimParisHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ActarSimParisHit*)
   {
      return GenerateInitInstanceLocal((::ActarSimParisHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ActarSimParisHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ActarSimPrimaryInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ActarSimPrimaryInfo(void *p = 0);
   static void *newArray_ActarSimPrimaryInfo(Long_t size, void *p);
   static void delete_ActarSimPrimaryInfo(void *p);
   static void deleteArray_ActarSimPrimaryInfo(void *p);
   static void destruct_ActarSimPrimaryInfo(void *p);
   static void streamer_ActarSimPrimaryInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ActarSimPrimaryInfo*)
   {
      ::ActarSimPrimaryInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ActarSimPrimaryInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ActarSimPrimaryInfo", ::ActarSimPrimaryInfo::Class_Version(), "../include/ActarSimPrimaryInfo.hh", 25,
                  typeid(::ActarSimPrimaryInfo), DefineBehavior(ptr, ptr),
                  &::ActarSimPrimaryInfo::Dictionary, isa_proxy, 0,
                  sizeof(::ActarSimPrimaryInfo) );
      instance.SetNew(&new_ActarSimPrimaryInfo);
      instance.SetNewArray(&newArray_ActarSimPrimaryInfo);
      instance.SetDelete(&delete_ActarSimPrimaryInfo);
      instance.SetDeleteArray(&deleteArray_ActarSimPrimaryInfo);
      instance.SetDestructor(&destruct_ActarSimPrimaryInfo);
      instance.SetStreamerFunc(&streamer_ActarSimPrimaryInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ActarSimPrimaryInfo*)
   {
      return GenerateInitInstanceLocal((::ActarSimPrimaryInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ActarSimPrimaryInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ActarSimBeamInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ActarSimBeamInfo(void *p = 0);
   static void *newArray_ActarSimBeamInfo(Long_t size, void *p);
   static void delete_ActarSimBeamInfo(void *p);
   static void deleteArray_ActarSimBeamInfo(void *p);
   static void destruct_ActarSimBeamInfo(void *p);
   static void streamer_ActarSimBeamInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ActarSimBeamInfo*)
   {
      ::ActarSimBeamInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ActarSimBeamInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ActarSimBeamInfo", ::ActarSimBeamInfo::Class_Version(), "../include/ActarSimBeamInfo.hh", 24,
                  typeid(::ActarSimBeamInfo), DefineBehavior(ptr, ptr),
                  &::ActarSimBeamInfo::Dictionary, isa_proxy, 0,
                  sizeof(::ActarSimBeamInfo) );
      instance.SetNew(&new_ActarSimBeamInfo);
      instance.SetNewArray(&newArray_ActarSimBeamInfo);
      instance.SetDelete(&delete_ActarSimBeamInfo);
      instance.SetDeleteArray(&deleteArray_ActarSimBeamInfo);
      instance.SetDestructor(&destruct_ActarSimBeamInfo);
      instance.SetStreamerFunc(&streamer_ActarSimBeamInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ActarSimBeamInfo*)
   {
      return GenerateInitInstanceLocal((::ActarSimBeamInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ActarSimBeamInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *ActarSimData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ActarSimData::Class_Name()
{
   return "ActarSimData";
}

//______________________________________________________________________________
const char *ActarSimData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ActarSimData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ActarSimData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ActarSimData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ActarSimTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ActarSimTrack::Class_Name()
{
   return "ActarSimTrack";
}

//______________________________________________________________________________
const char *ActarSimTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ActarSimTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ActarSimTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ActarSimTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ActarSimSimpleTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ActarSimSimpleTrack::Class_Name()
{
   return "ActarSimSimpleTrack";
}

//______________________________________________________________________________
const char *ActarSimSimpleTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSimpleTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ActarSimSimpleTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSimpleTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ActarSimSimpleTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSimpleTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ActarSimSimpleTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSimpleTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ActarSimSciHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ActarSimSciHit::Class_Name()
{
   return "ActarSimSciHit";
}

//______________________________________________________________________________
const char *ActarSimSciHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSciHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ActarSimSciHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSciHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ActarSimSciHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSciHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ActarSimSciHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSciHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ActarSimSilHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ActarSimSilHit::Class_Name()
{
   return "ActarSimSilHit";
}

//______________________________________________________________________________
const char *ActarSimSilHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSilHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ActarSimSilHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSilHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ActarSimSilHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSilHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ActarSimSilHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimSilHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ActarSimParisHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ActarSimParisHit::Class_Name()
{
   return "ActarSimParisHit";
}

//______________________________________________________________________________
const char *ActarSimParisHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimParisHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ActarSimParisHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimParisHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ActarSimParisHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimParisHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ActarSimParisHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimParisHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ActarSimPrimaryInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ActarSimPrimaryInfo::Class_Name()
{
   return "ActarSimPrimaryInfo";
}

//______________________________________________________________________________
const char *ActarSimPrimaryInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimPrimaryInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ActarSimPrimaryInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimPrimaryInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ActarSimPrimaryInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimPrimaryInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ActarSimPrimaryInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimPrimaryInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ActarSimBeamInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ActarSimBeamInfo::Class_Name()
{
   return "ActarSimBeamInfo";
}

//______________________________________________________________________________
const char *ActarSimBeamInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimBeamInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ActarSimBeamInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ActarSimBeamInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ActarSimBeamInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimBeamInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ActarSimBeamInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ActarSimBeamInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void ActarSimData::Streamer(TBuffer &R__b)
{
   // Stream an object of class ActarSimData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> thetaPrim1;
      R__b >> thetaPrim2;
      R__b >> phiPrim1;
      R__b >> phiPrim2;
      R__b >> energyPrim1;
      R__b >> energyPrim2;
      R__b >> energyOnGasPrim1;
      R__b >> energyOnGasPrim2;
      R__b >> stepSumLengthOnGasPrim1;
      R__b >> stepSumLengthOnGasPrim2;
      R__b >> protonLastPositionCode;
      R__b >> protonLastPositionx;
      R__b >> protonLastPositiony;
      R__b >> protonLastPositionz;
      R__b >> eventID;
      R__b >> runID;
      R__b.CheckByteCount(R__s, R__c, ActarSimData::IsA());
   } else {
      R__c = R__b.WriteVersion(ActarSimData::IsA(), kTRUE);
      R__b << thetaPrim1;
      R__b << thetaPrim2;
      R__b << phiPrim1;
      R__b << phiPrim2;
      R__b << energyPrim1;
      R__b << energyPrim2;
      R__b << energyOnGasPrim1;
      R__b << energyOnGasPrim2;
      R__b << stepSumLengthOnGasPrim1;
      R__b << stepSumLengthOnGasPrim2;
      R__b << protonLastPositionCode;
      R__b << protonLastPositionx;
      R__b << protonLastPositiony;
      R__b << protonLastPositionz;
      R__b << eventID;
      R__b << runID;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ActarSimData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ActarSimData.
      TClass *R__cl = ::ActarSimData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaPrim1", &thetaPrim1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaPrim2", &thetaPrim2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiPrim1", &phiPrim1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiPrim2", &phiPrim2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyPrim1", &energyPrim1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyPrim2", &energyPrim2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyOnGasPrim1", &energyOnGasPrim1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyOnGasPrim2", &energyOnGasPrim2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepSumLengthOnGasPrim1", &stepSumLengthOnGasPrim1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepSumLengthOnGasPrim2", &stepSumLengthOnGasPrim2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonLastPositionCode", &protonLastPositionCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonLastPositionx", &protonLastPositionx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonLastPositiony", &protonLastPositiony);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "protonLastPositionz", &protonLastPositionz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID", &eventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID", &runID);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ActarSimData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ActarSimData : new ::ActarSimData;
   }
   static void *newArray_ActarSimData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ActarSimData[nElements] : new ::ActarSimData[nElements];
   }
   // Wrapper around operator delete
   static void delete_ActarSimData(void *p) {
      delete ((::ActarSimData*)p);
   }
   static void deleteArray_ActarSimData(void *p) {
      delete [] ((::ActarSimData*)p);
   }
   static void destruct_ActarSimData(void *p) {
      typedef ::ActarSimData current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ActarSimData(TBuffer &buf, void *obj) {
      ((::ActarSimData*)obj)->::ActarSimData::Streamer(buf);
   }
} // end of namespace ROOT for class ::ActarSimData

//______________________________________________________________________________
void ActarSimTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ActarSimTrack.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> xCoord;
      R__b >> yCoord;
      R__b >> zCoord;
      R__b >> xPreCoord;
      R__b >> yPreCoord;
      R__b >> zPreCoord;
      R__b >> energyStep;
      R__b >> parentTrackID;
      R__b >> trackID;
      R__b >> eventID;
      R__b >> runID;
      R__b.CheckByteCount(R__s, R__c, ActarSimTrack::IsA());
   } else {
      R__c = R__b.WriteVersion(ActarSimTrack::IsA(), kTRUE);
      R__b << xCoord;
      R__b << yCoord;
      R__b << zCoord;
      R__b << xPreCoord;
      R__b << yPreCoord;
      R__b << zPreCoord;
      R__b << energyStep;
      R__b << parentTrackID;
      R__b << trackID;
      R__b << eventID;
      R__b << runID;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ActarSimTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ActarSimTrack.
      TClass *R__cl = ::ActarSimTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xCoord", &xCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yCoord", &yCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zCoord", &zCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xPreCoord", &xPreCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yPreCoord", &yPreCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zPreCoord", &zPreCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyStep", &energyStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentTrackID", &parentTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID", &trackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID", &eventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID", &runID);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ActarSimTrack(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ActarSimTrack : new ::ActarSimTrack;
   }
   static void *newArray_ActarSimTrack(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ActarSimTrack[nElements] : new ::ActarSimTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_ActarSimTrack(void *p) {
      delete ((::ActarSimTrack*)p);
   }
   static void deleteArray_ActarSimTrack(void *p) {
      delete [] ((::ActarSimTrack*)p);
   }
   static void destruct_ActarSimTrack(void *p) {
      typedef ::ActarSimTrack current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ActarSimTrack(TBuffer &buf, void *obj) {
      ((::ActarSimTrack*)obj)->::ActarSimTrack::Streamer(buf);
   }
} // end of namespace ROOT for class ::ActarSimTrack

//______________________________________________________________________________
void ActarSimSimpleTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class ActarSimSimpleTrack.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> xPre;
      R__b >> yPre;
      R__b >> zPre;
      R__b >> xPost;
      R__b >> yPost;
      R__b >> zPost;
      R__b >> energyStride;
      R__b >> particleCharge;
      R__b >> particleMass;
      R__b >> particleID;
      R__b >> strideLength;
      R__b >> timePre;
      R__b >> timePost;
      R__b >> numberSteps;
      R__b >> strideOrdinal;
      R__b >> parentTrackID;
      R__b >> trackID;
      R__b >> eventID;
      R__b >> runID;
      R__b.CheckByteCount(R__s, R__c, ActarSimSimpleTrack::IsA());
   } else {
      R__c = R__b.WriteVersion(ActarSimSimpleTrack::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << xPre;
      R__b << yPre;
      R__b << zPre;
      R__b << xPost;
      R__b << yPost;
      R__b << zPost;
      R__b << energyStride;
      R__b << particleCharge;
      R__b << particleMass;
      R__b << particleID;
      R__b << strideLength;
      R__b << timePre;
      R__b << timePost;
      R__b << numberSteps;
      R__b << strideOrdinal;
      R__b << parentTrackID;
      R__b << trackID;
      R__b << eventID;
      R__b << runID;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ActarSimSimpleTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ActarSimSimpleTrack.
      TClass *R__cl = ::ActarSimSimpleTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xPre", &xPre);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yPre", &yPre);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zPre", &zPre);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xPost", &xPost);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yPost", &yPost);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zPost", &zPost);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyStride", &energyStride);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleCharge", &particleCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleMass", &particleMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleID", &particleID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strideLength", &strideLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timePre", &timePre);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timePost", &timePost);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberSteps", &numberSteps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strideOrdinal", &strideOrdinal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentTrackID", &parentTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID", &trackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID", &eventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID", &runID);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ActarSimSimpleTrack(void *p) {
      return  p ? new(p) ::ActarSimSimpleTrack : new ::ActarSimSimpleTrack;
   }
   static void *newArray_ActarSimSimpleTrack(Long_t nElements, void *p) {
      return p ? new(p) ::ActarSimSimpleTrack[nElements] : new ::ActarSimSimpleTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_ActarSimSimpleTrack(void *p) {
      delete ((::ActarSimSimpleTrack*)p);
   }
   static void deleteArray_ActarSimSimpleTrack(void *p) {
      delete [] ((::ActarSimSimpleTrack*)p);
   }
   static void destruct_ActarSimSimpleTrack(void *p) {
      typedef ::ActarSimSimpleTrack current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ActarSimSimpleTrack(TBuffer &buf, void *obj) {
      ((::ActarSimSimpleTrack*)obj)->::ActarSimSimpleTrack::Streamer(buf);
   }
} // end of namespace ROOT for class ::ActarSimSimpleTrack

//______________________________________________________________________________
void ActarSimSilHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ActarSimSilHit.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> detectorID;
      R__b >> detCenterCoordinateX;
      R__b >> detCenterCoordinateY;
      R__b >> detCenterCoordinateZ;
      R__b >> xpos;
      R__b >> ypos;
      R__b >> zpos;
      R__b >> time;
      R__b >> energy;
      R__b >> eBeforeSil;
      R__b >> eAfterSil;
      R__b >> trackID;
      R__b >> eventID;
      R__b >> runID;
      R__b >> particleID;
      R__b >> particleCharge;
      R__b >> particleMass;
      R__b >> stepsContributing;
      R__b.CheckByteCount(R__s, R__c, ActarSimSilHit::IsA());
   } else {
      R__c = R__b.WriteVersion(ActarSimSilHit::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << detectorID;
      R__b << detCenterCoordinateX;
      R__b << detCenterCoordinateY;
      R__b << detCenterCoordinateZ;
      R__b << xpos;
      R__b << ypos;
      R__b << zpos;
      R__b << time;
      R__b << energy;
      R__b << eBeforeSil;
      R__b << eAfterSil;
      R__b << trackID;
      R__b << eventID;
      R__b << runID;
      R__b << particleID;
      R__b << particleCharge;
      R__b << particleMass;
      R__b << stepsContributing;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ActarSimSilHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ActarSimSilHit.
      TClass *R__cl = ::ActarSimSilHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorID", &detectorID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detCenterCoordinateX", &detCenterCoordinateX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detCenterCoordinateY", &detCenterCoordinateY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detCenterCoordinateZ", &detCenterCoordinateZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xpos", &xpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ypos", &ypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpos", &zpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBeforeSil", &eBeforeSil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eAfterSil", &eAfterSil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID", &trackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID", &eventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID", &runID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleID", &particleID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleCharge", &particleCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleMass", &particleMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepsContributing", &stepsContributing);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ActarSimSilHit(void *p) {
      return  p ? new(p) ::ActarSimSilHit : new ::ActarSimSilHit;
   }
   static void *newArray_ActarSimSilHit(Long_t nElements, void *p) {
      return p ? new(p) ::ActarSimSilHit[nElements] : new ::ActarSimSilHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_ActarSimSilHit(void *p) {
      delete ((::ActarSimSilHit*)p);
   }
   static void deleteArray_ActarSimSilHit(void *p) {
      delete [] ((::ActarSimSilHit*)p);
   }
   static void destruct_ActarSimSilHit(void *p) {
      typedef ::ActarSimSilHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ActarSimSilHit(TBuffer &buf, void *obj) {
      ((::ActarSimSilHit*)obj)->::ActarSimSilHit::Streamer(buf);
   }
} // end of namespace ROOT for class ::ActarSimSilHit

//______________________________________________________________________________
void ActarSimSciHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ActarSimSciHit.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> type;
      R__b >> copy;
      R__b >> time;
      R__b >> energy;
      R__b >> eventID;
      R__b >> runID;
      R__b >> particleID;
      R__b >> particleCharge;
      R__b >> particleMass;
      R__b.CheckByteCount(R__s, R__c, ActarSimSciHit::IsA());
   } else {
      R__c = R__b.WriteVersion(ActarSimSciHit::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << type;
      R__b << copy;
      R__b << time;
      R__b << energy;
      R__b << eventID;
      R__b << runID;
      R__b << particleID;
      R__b << particleCharge;
      R__b << particleMass;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ActarSimSciHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ActarSimSciHit.
      TClass *R__cl = ::ActarSimSciHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "copy", &copy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID", &eventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID", &runID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleID", &particleID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleCharge", &particleCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleMass", &particleMass);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ActarSimSciHit(void *p) {
      return  p ? new(p) ::ActarSimSciHit : new ::ActarSimSciHit;
   }
   static void *newArray_ActarSimSciHit(Long_t nElements, void *p) {
      return p ? new(p) ::ActarSimSciHit[nElements] : new ::ActarSimSciHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_ActarSimSciHit(void *p) {
      delete ((::ActarSimSciHit*)p);
   }
   static void deleteArray_ActarSimSciHit(void *p) {
      delete [] ((::ActarSimSciHit*)p);
   }
   static void destruct_ActarSimSciHit(void *p) {
      typedef ::ActarSimSciHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ActarSimSciHit(TBuffer &buf, void *obj) {
      ((::ActarSimSciHit*)obj)->::ActarSimSciHit::Streamer(buf);
   }
} // end of namespace ROOT for class ::ActarSimSciHit

//______________________________________________________________________________
void ActarSimParisHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class ActarSimParisHit.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> detectorID;
      R__b >> motherID;
      R__b >> xpos;
      R__b >> ypos;
      R__b >> zpos;
      R__b >> time;
      R__b >> energy;
      R__b >> trackID;
      R__b >> eventID;
      R__b >> runID;
      R__b >> particleID;
      R__b >> particleCharge;
      R__b >> particleMass;
      process_name.Streamer(R__b);
      detector_name.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ActarSimParisHit::IsA());
   } else {
      R__c = R__b.WriteVersion(ActarSimParisHit::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << detectorID;
      R__b << motherID;
      R__b << xpos;
      R__b << ypos;
      R__b << zpos;
      R__b << time;
      R__b << energy;
      R__b << trackID;
      R__b << eventID;
      R__b << runID;
      R__b << particleID;
      R__b << particleCharge;
      R__b << particleMass;
      process_name.Streamer(R__b);
      detector_name.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ActarSimParisHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ActarSimParisHit.
      TClass *R__cl = ::ActarSimParisHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorID", &detectorID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "motherID", &motherID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xpos", &xpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ypos", &ypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpos", &zpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID", &trackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID", &eventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID", &runID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleID", &particleID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleCharge", &particleCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleMass", &particleMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process_name", &process_name);
      R__insp.InspectMember(process_name, "process_name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detector_name", &detector_name);
      R__insp.InspectMember(detector_name, "detector_name.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ActarSimParisHit(void *p) {
      return  p ? new(p) ::ActarSimParisHit : new ::ActarSimParisHit;
   }
   static void *newArray_ActarSimParisHit(Long_t nElements, void *p) {
      return p ? new(p) ::ActarSimParisHit[nElements] : new ::ActarSimParisHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_ActarSimParisHit(void *p) {
      delete ((::ActarSimParisHit*)p);
   }
   static void deleteArray_ActarSimParisHit(void *p) {
      delete [] ((::ActarSimParisHit*)p);
   }
   static void destruct_ActarSimParisHit(void *p) {
      typedef ::ActarSimParisHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ActarSimParisHit(TBuffer &buf, void *obj) {
      ((::ActarSimParisHit*)obj)->::ActarSimParisHit::Streamer(buf);
   }
} // end of namespace ROOT for class ::ActarSimParisHit

//______________________________________________________________________________
void ActarSimPrimaryInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class ActarSimPrimaryInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> nbPrimariesInEvent;
      R__b >> kineticEnergy;
      R__b >> theta;
      R__b >> phi;
      R__b >> PDGcode;
      R__b >> Px;
      R__b >> Py;
      R__b >> Pz;
      R__b >> trackID;
      R__b >> mass;
      R__b >> charge;
      R__b >> polX;
      R__b >> polY;
      R__b >> polZ;
      R__b >> Weight0;
      R__b >> properTime;
      R__b >> x0;
      R__b >> y0;
      R__b >> z0;
      R__b >> eventID;
      R__b >> runID;
      R__b.CheckByteCount(R__s, R__c, ActarSimPrimaryInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(ActarSimPrimaryInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << nbPrimariesInEvent;
      R__b << kineticEnergy;
      R__b << theta;
      R__b << phi;
      R__b << PDGcode;
      R__b << Px;
      R__b << Py;
      R__b << Pz;
      R__b << trackID;
      R__b << mass;
      R__b << charge;
      R__b << polX;
      R__b << polY;
      R__b << polZ;
      R__b << Weight0;
      R__b << properTime;
      R__b << x0;
      R__b << y0;
      R__b << z0;
      R__b << eventID;
      R__b << runID;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ActarSimPrimaryInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ActarSimPrimaryInfo.
      TClass *R__cl = ::ActarSimPrimaryInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbPrimariesInEvent", &nbPrimariesInEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kineticEnergy", &kineticEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PDGcode", &PDGcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Px", &Px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Py", &Py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pz", &Pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID", &trackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass", &mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "polX", &polX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "polY", &polY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "polZ", &polZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Weight0", &Weight0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "properTime", &properTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x0", &x0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y0", &y0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z0", &z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID", &eventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID", &runID);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ActarSimPrimaryInfo(void *p) {
      return  p ? new(p) ::ActarSimPrimaryInfo : new ::ActarSimPrimaryInfo;
   }
   static void *newArray_ActarSimPrimaryInfo(Long_t nElements, void *p) {
      return p ? new(p) ::ActarSimPrimaryInfo[nElements] : new ::ActarSimPrimaryInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_ActarSimPrimaryInfo(void *p) {
      delete ((::ActarSimPrimaryInfo*)p);
   }
   static void deleteArray_ActarSimPrimaryInfo(void *p) {
      delete [] ((::ActarSimPrimaryInfo*)p);
   }
   static void destruct_ActarSimPrimaryInfo(void *p) {
      typedef ::ActarSimPrimaryInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ActarSimPrimaryInfo(TBuffer &buf, void *obj) {
      ((::ActarSimPrimaryInfo*)obj)->::ActarSimPrimaryInfo::Streamer(buf);
   }
} // end of namespace ROOT for class ::ActarSimPrimaryInfo

//______________________________________________________________________________
void ActarSimBeamInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class ActarSimBeamInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> energyEntrance;
      R__b >> energyVertex;
      R__b >> thetaEntrance;
      R__b >> phiEntrance;
      R__b >> thetaVertex;
      R__b >> phiVertex;
      R__b >> xEntrance;
      R__b >> yEntrance;
      R__b >> zEntrance;
      R__b >> xVertex;
      R__b >> yVertex;
      R__b >> zVertex;
      R__b >> timeVertex;
      R__b.CheckByteCount(R__s, R__c, ActarSimBeamInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(ActarSimBeamInfo::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << energyEntrance;
      R__b << energyVertex;
      R__b << thetaEntrance;
      R__b << phiEntrance;
      R__b << thetaVertex;
      R__b << phiVertex;
      R__b << xEntrance;
      R__b << yEntrance;
      R__b << zEntrance;
      R__b << xVertex;
      R__b << yVertex;
      R__b << zVertex;
      R__b << timeVertex;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ActarSimBeamInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ActarSimBeamInfo.
      TClass *R__cl = ::ActarSimBeamInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyEntrance", &energyEntrance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyVertex", &energyVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaEntrance", &thetaEntrance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiEntrance", &phiEntrance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaVertex", &thetaVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiVertex", &phiVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xEntrance", &xEntrance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yEntrance", &yEntrance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zEntrance", &zEntrance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xVertex", &xVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yVertex", &yVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zVertex", &zVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeVertex", &timeVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status", &status);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ActarSimBeamInfo(void *p) {
      return  p ? new(p) ::ActarSimBeamInfo : new ::ActarSimBeamInfo;
   }
   static void *newArray_ActarSimBeamInfo(Long_t nElements, void *p) {
      return p ? new(p) ::ActarSimBeamInfo[nElements] : new ::ActarSimBeamInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_ActarSimBeamInfo(void *p) {
      delete ((::ActarSimBeamInfo*)p);
   }
   static void deleteArray_ActarSimBeamInfo(void *p) {
      delete [] ((::ActarSimBeamInfo*)p);
   }
   static void destruct_ActarSimBeamInfo(void *p) {
      typedef ::ActarSimBeamInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ActarSimBeamInfo(TBuffer &buf, void *obj) {
      ((::ActarSimBeamInfo*)obj)->::ActarSimBeamInfo::Streamer(buf);
   }
} // end of namespace ROOT for class ::ActarSimBeamInfo

/********************************************************
* ActarSimDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableActarSimDict();

extern "C" void G__set_cpp_environmentActarSimDict() {
  G__cpp_reset_tagtableActarSimDict();
}
#include <new>
extern "C" int G__cpp_dllrevActarSimDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ActarSimData */
static int G__ActarSimDict_215_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimData[n];
     } else {
       p = new((void*) gvp) ActarSimData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimData;
     } else {
       p = new((void*) gvp) ActarSimData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetThetaPrim1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetThetaPrim2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetPhiPrim1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetPhiPrim2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetEnergyPrim1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetEnergyPrim2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetEnergyOnGasPrim1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetEnergyOnGasPrim2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetStepSumLengthOnGasPrim1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetStepSumLengthOnGasPrim2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetProtonLastPositionCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetProtonLastPositionx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetProtonLastPositiony());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimData*) G__getstructoffset())->GetProtonLastPositionz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimData*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimData*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetThetaPrim1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetThetaPrim2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetPhiPrim1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetPhiPrim2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetEnergyPrim1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetEnergyPrim2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetEnergyOnGasPrim1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetEnergyOnGasPrim2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetStepSumLengthOnGasPrim1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetStepSumLengthOnGasPrim2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetProtonLastPositionCode((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetProtonLastPositionx((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetProtonLastPositiony((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetProtonLastPositionz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetEventID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->SetRunID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ActarSimData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ActarSimData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ActarSimData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ActarSimData*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_215_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ActarSimDict_215_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ActarSimData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ActarSimData(*(ActarSimData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ActarSimData G__TActarSimData;
static int G__ActarSimDict_215_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ActarSimData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ActarSimData*) (soff+(sizeof(ActarSimData)*i)))->~G__TActarSimData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ActarSimData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ActarSimData*) (soff))->~G__TActarSimData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ActarSimDict_215_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimData* dest = (ActarSimData*) G__getstructoffset();
   *dest = *(ActarSimData*) libp->para[0].ref;
   const ActarSimData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ActarSimTrack */
static int G__ActarSimDict_216_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimTrack[n];
     } else {
       p = new((void*) gvp) ActarSimTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimTrack;
     } else {
       p = new((void*) gvp) ActarSimTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimTrack*) G__getstructoffset())->GetXCoord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimTrack*) G__getstructoffset())->GetYCoord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimTrack*) G__getstructoffset())->GetZCoord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimTrack*) G__getstructoffset())->GetXPreCoord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimTrack*) G__getstructoffset())->GetYPreCoord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimTrack*) G__getstructoffset())->GetZPreCoord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimTrack*) G__getstructoffset())->GetEnergyStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimTrack*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimTrack*) G__getstructoffset())->GetParentTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimTrack*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimTrack*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetXCoord((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetYCoord((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetZCoord((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetXPreCoord((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetYPreCoord((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetZPreCoord((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetEnergyStep((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetParentTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetEventID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->SetRunID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ActarSimTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ActarSimTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ActarSimTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ActarSimTrack*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_216_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ActarSimDict_216_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ActarSimTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ActarSimTrack(*(ActarSimTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ActarSimTrack G__TActarSimTrack;
static int G__ActarSimDict_216_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ActarSimTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ActarSimTrack*) (soff+(sizeof(ActarSimTrack)*i)))->~G__TActarSimTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ActarSimTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ActarSimTrack*) (soff))->~G__TActarSimTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ActarSimDict_216_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimTrack* dest = (ActarSimTrack*) G__getstructoffset();
   *dest = *(ActarSimTrack*) libp->para[0].ref;
   const ActarSimTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ActarSimSimpleTrack */
static int G__ActarSimDict_217_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimSimpleTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimSimpleTrack[n];
     } else {
       p = new((void*) gvp) ActarSimSimpleTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimSimpleTrack;
     } else {
       p = new((void*) gvp) ActarSimSimpleTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSimpleTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ActarSimSimpleTrack& obj = ((ActarSimSimpleTrack*) G__getstructoffset())->operator=(*(ActarSimSimpleTrack*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetXPre());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetYPre());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetZPre());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetXPost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetYPost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetZPost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetEnergyStride());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetParticleCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetParticleMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimSimpleTrack*) G__getstructoffset())->GetParticleID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetStrideLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetTimePre());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSimpleTrack*) G__getstructoffset())->GetTimePost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimSimpleTrack*) G__getstructoffset())->GetNumberSteps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimSimpleTrack*) G__getstructoffset())->GetStrideOrdinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimSimpleTrack*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimSimpleTrack*) G__getstructoffset())->GetParentTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimSimpleTrack*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimSimpleTrack*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetXPre((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetYPre((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetZPre((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetXPost((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetYPost((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetZPost((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetEnergyStride((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetParticleCharge((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetParticleMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetParticleID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetStrideLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetTimePre((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetTimePost((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetNumberSteps((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetStrideOrdinal((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetParentTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetEventID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->SetRunID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ActarSimSimpleTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimSimpleTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ActarSimSimpleTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ActarSimSimpleTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSimpleTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimSimpleTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimSimpleTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimSimpleTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_217_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimSimpleTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ActarSimDict_217_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ActarSimSimpleTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ActarSimSimpleTrack(*(ActarSimSimpleTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSimpleTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ActarSimSimpleTrack G__TActarSimSimpleTrack;
static int G__ActarSimDict_217_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ActarSimSimpleTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ActarSimSimpleTrack*) (soff+(sizeof(ActarSimSimpleTrack)*i)))->~G__TActarSimSimpleTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ActarSimSimpleTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ActarSimSimpleTrack*) (soff))->~G__TActarSimSimpleTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ActarSimSciHit */
static int G__ActarSimDict_218_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimSciHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimSciHit[n];
     } else {
       p = new((void*) gvp) ActarSimSciHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimSciHit;
     } else {
       p = new((void*) gvp) ActarSimSciHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSciHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->SetType((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->SetCopy((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->SetEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->SetEventID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->SetRunID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->SetParticleID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->SetParticleCharge((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->SetParticleMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimSciHit*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimSciHit*) G__getstructoffset())->GetCopy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSciHit*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSciHit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimSciHit*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimSciHit*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimSciHit*) G__getstructoffset())->GetParticleID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSciHit*) G__getstructoffset())->GetParticleCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSciHit*) G__getstructoffset())->GetParticleMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ActarSimSciHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimSciHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ActarSimSciHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ActarSimSciHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSciHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimSciHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimSciHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimSciHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_218_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimSciHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ActarSimDict_218_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ActarSimSciHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ActarSimSciHit(*(ActarSimSciHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSciHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ActarSimSciHit G__TActarSimSciHit;
static int G__ActarSimDict_218_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ActarSimSciHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ActarSimSciHit*) (soff+(sizeof(ActarSimSciHit)*i)))->~G__TActarSimSciHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ActarSimSciHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ActarSimSciHit*) (soff))->~G__TActarSimSciHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ActarSimDict_218_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimSciHit* dest = (ActarSimSciHit*) G__getstructoffset();
   *dest = *(ActarSimSciHit*) libp->para[0].ref;
   const ActarSimSciHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ActarSimSilHit */
static int G__ActarSimDict_219_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimSilHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimSilHit[n];
     } else {
       p = new((void*) gvp) ActarSimSilHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimSilHit;
     } else {
       p = new((void*) gvp) ActarSimSilHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSilHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetDetectorID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetDetCenterCoordinateX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetDetCenterCoordinateY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetDetCenterCoordinateZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetXPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetYPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetZPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetEBeforeSil((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetEAfterSil((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetTrackID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetEventID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetRunID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetParticleID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetParticleCharge((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetParticleMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->SetStepsContributing((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimSilHit*) G__getstructoffset())->GetDetectorID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetDetCenterCoordinateX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetDetCenterCoordinateY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetDetCenterCoordinateZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetXPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetYPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetZPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetEBeforeSil());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetEAfterSil());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimSilHit*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimSilHit*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimSilHit*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimSilHit*) G__getstructoffset())->GetParticleID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetParticleCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimSilHit*) G__getstructoffset())->GetParticleMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimSilHit*) G__getstructoffset())->GetStepsContributing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ActarSimSilHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimSilHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ActarSimSilHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ActarSimSilHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimSilHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimSilHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimSilHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimSilHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_219_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimSilHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ActarSimDict_219_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ActarSimSilHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ActarSimSilHit(*(ActarSimSilHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSilHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ActarSimSilHit G__TActarSimSilHit;
static int G__ActarSimDict_219_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ActarSimSilHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ActarSimSilHit*) (soff+(sizeof(ActarSimSilHit)*i)))->~G__TActarSimSilHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ActarSimSilHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ActarSimSilHit*) (soff))->~G__TActarSimSilHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ActarSimDict_219_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimSilHit* dest = (ActarSimSilHit*) G__getstructoffset();
   *dest = *(ActarSimSilHit*) libp->para[0].ref;
   const ActarSimSilHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ActarSimParisHit */
static int G__ActarSimDict_220_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimParisHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimParisHit[n];
     } else {
       p = new((void*) gvp) ActarSimParisHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimParisHit;
     } else {
       p = new((void*) gvp) ActarSimParisHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimParisHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetDetectorID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetMotherID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetXPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetYPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetZPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetTrackID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetEventID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetRunID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetParticleID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetParticleCharge((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetParticleMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetProcessName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->SetDetectorName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimParisHit*) G__getstructoffset())->GetDetectorID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ActarSimParisHit*) G__getstructoffset())->GetMotherID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimParisHit*) G__getstructoffset())->GetXPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimParisHit*) G__getstructoffset())->GetYPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimParisHit*) G__getstructoffset())->GetZPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimParisHit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimParisHit*) G__getstructoffset())->GetEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimParisHit*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimParisHit*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimParisHit*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((ActarSimParisHit*) G__getstructoffset())->GetParticleID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimParisHit*) G__getstructoffset())->GetParticleCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ActarSimParisHit*) G__getstructoffset())->GetParticleMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((ActarSimParisHit*) G__getstructoffset())->GetProcessName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((ActarSimParisHit*) G__getstructoffset())->GetDetectorName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ActarSimParisHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimParisHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ActarSimParisHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ActarSimParisHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimParisHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimParisHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimParisHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimParisHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_220_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimParisHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ActarSimDict_220_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ActarSimParisHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ActarSimParisHit(*(ActarSimParisHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimParisHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ActarSimParisHit G__TActarSimParisHit;
static int G__ActarSimDict_220_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ActarSimParisHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ActarSimParisHit*) (soff+(sizeof(ActarSimParisHit)*i)))->~G__TActarSimParisHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ActarSimParisHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ActarSimParisHit*) (soff))->~G__TActarSimParisHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ActarSimDict_220_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimParisHit* dest = (ActarSimParisHit*) G__getstructoffset();
   *dest = *(ActarSimParisHit*) libp->para[0].ref;
   const ActarSimParisHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ActarSimPrimaryInfo */
static int G__ActarSimDict_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimPrimaryInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimPrimaryInfo[n];
     } else {
       p = new((void*) gvp) ActarSimPrimaryInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimPrimaryInfo;
     } else {
       p = new((void*) gvp) ActarSimPrimaryInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimPrimaryInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ActarSimPrimaryInfo((G4PrimaryParticle*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ActarSimPrimaryInfo((G4PrimaryParticle*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetNbPrimariesInEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetKineticEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetPDGcode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetPolX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetPolY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetPolZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetProperTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetEventID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetX0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetY0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimPrimaryInfo*) G__getstructoffset())->GetZ0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetNbPrimariesInEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetKineticEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetPDGcode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetPx((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetPy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetPz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetCharge((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetPolX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetPolY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetPolZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetWeight((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetProperTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetEventID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetRunID((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetX0((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetY0((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetZ0((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetVertexPosition((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetMomentum((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->Set4Momentum((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->SetPolarization((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ActarSimPrimaryInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimPrimaryInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ActarSimPrimaryInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ActarSimPrimaryInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimPrimaryInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimPrimaryInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimPrimaryInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimPrimaryInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_222_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimPrimaryInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ActarSimDict_222_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ActarSimPrimaryInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ActarSimPrimaryInfo(*(ActarSimPrimaryInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ActarSimPrimaryInfo G__TActarSimPrimaryInfo;
static int G__ActarSimDict_222_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ActarSimPrimaryInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ActarSimPrimaryInfo*) (soff+(sizeof(ActarSimPrimaryInfo)*i)))->~G__TActarSimPrimaryInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ActarSimPrimaryInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ActarSimPrimaryInfo*) (soff))->~G__TActarSimPrimaryInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ActarSimDict_222_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimPrimaryInfo* dest = (ActarSimPrimaryInfo*) G__getstructoffset();
   *dest = *(ActarSimPrimaryInfo*) libp->para[0].ref;
   const ActarSimPrimaryInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ActarSimBeamInfo */
static int G__ActarSimDict_223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimBeamInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimBeamInfo[n];
     } else {
       p = new((void*) gvp) ActarSimBeamInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ActarSimBeamInfo;
     } else {
       p = new((void*) gvp) ActarSimBeamInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimBeamInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetEnergyEntrance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetEnergyVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetThetaEntrance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetPhiEntrance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetThetaVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetPhiVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetXEntrance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetYEntrance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetZEntrance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetXVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetYVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetZVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ActarSimBeamInfo*) G__getstructoffset())->GetTimeVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ActarSimBeamInfo*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetEnergyEntrance((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetEnergyVertex((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetThetaEntrance((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetPhiEntrance((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetThetaVertex((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetPhiVertex((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetXEntrance((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetYEntrance((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetZEntrance((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetXVertex((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetYVertex((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetZVertex((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetTimeVertex((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetStatus((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetPositionEntrance((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetAnglesEntrance((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetPositionVertex((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->SetAnglesVertex((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ActarSimBeamInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimBeamInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ActarSimBeamInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ActarSimBeamInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ActarSimBeamInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimBeamInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimBeamInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ActarSimBeamInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ActarSimDict_223_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ActarSimBeamInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ActarSimDict_223_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ActarSimBeamInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ActarSimBeamInfo(*(ActarSimBeamInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimBeamInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ActarSimBeamInfo G__TActarSimBeamInfo;
static int G__ActarSimDict_223_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ActarSimBeamInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ActarSimBeamInfo*) (soff+(sizeof(ActarSimBeamInfo)*i)))->~G__TActarSimBeamInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ActarSimBeamInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ActarSimBeamInfo*) (soff))->~G__TActarSimBeamInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ActarSimDict_223_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ActarSimBeamInfo* dest = (ActarSimBeamInfo*) G__getstructoffset();
   *dest = *(ActarSimBeamInfo*) libp->para[0].ref;
   const ActarSimBeamInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ActarSimData */

/* ActarSimTrack */

/* ActarSimSimpleTrack */

/* ActarSimSciHit */

/* ActarSimSilHit */

/* ActarSimParisHit */

/* ActarSimPrimaryInfo */

/* ActarSimBeamInfo */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncActarSimDict {
 public:
  G__Sizep2memfuncActarSimDict(): p(&G__Sizep2memfuncActarSimDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncActarSimDict::*p)();
};

size_t G__get_sizep2memfuncActarSimDict()
{
  G__Sizep2memfuncActarSimDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceActarSimDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSimpleTrack))) {
     ActarSimSimpleTrack *G__Lderived;
     G__Lderived=(ActarSimSimpleTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSimpleTrack),G__get_linked_tagnum(&G__ActarSimDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSciHit))) {
     ActarSimSciHit *G__Lderived;
     G__Lderived=(ActarSimSciHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSciHit),G__get_linked_tagnum(&G__ActarSimDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSilHit))) {
     ActarSimSilHit *G__Lderived;
     G__Lderived=(ActarSimSilHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSilHit),G__get_linked_tagnum(&G__ActarSimDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimParisHit))) {
     ActarSimParisHit *G__Lderived;
     G__Lderived=(ActarSimParisHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimParisHit),G__get_linked_tagnum(&G__ActarSimDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo))) {
     ActarSimPrimaryInfo *G__Lderived;
     G__Lderived=(ActarSimPrimaryInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo),G__get_linked_tagnum(&G__ActarSimDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimBeamInfo))) {
     ActarSimBeamInfo *G__Lderived;
     G__Lderived=(ActarSimBeamInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimBeamInfo),G__get_linked_tagnum(&G__ActarSimDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableActarSimDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ActarSimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ActarSimDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ActarSimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ActarSimDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ActarSimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ActarSimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ActarSimDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ActarSimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ActarSimDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ActarSimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ActarSimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ActarSimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ActarSimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ActarSimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ActarSimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ActarSimData */
static void G__setup_memvarActarSimData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimData));
   { ActarSimData *p; p=(ActarSimData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"thetaPrim1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"thetaPrim2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"phiPrim1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"phiPrim2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energyPrim1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energyPrim2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energyOnGasPrim1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energyOnGasPrim2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"stepSumLengthOnGasPrim1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"stepSumLengthOnGasPrim2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"protonLastPositionCode=",0,"0-7, the position of proton in the last step");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"protonLastPositionx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"protonLastPositiony=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"protonLastPositionz=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eventID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"runID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ActarSimDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ActarSimTrack */
static void G__setup_memvarActarSimTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimTrack));
   { ActarSimTrack *p; p=(ActarSimTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"xCoord=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"yCoord=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zCoord=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"xPreCoord=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"yPreCoord=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zPreCoord=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energyStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"parentTrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eventID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"runID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ActarSimDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ActarSimSimpleTrack */
static void G__setup_memvarActarSimSimpleTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSimpleTrack));
   { ActarSimSimpleTrack *p; p=(ActarSimSimpleTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"xPre=",0,"coordinates of the preStepPoint for the first step in the stride");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"yPre=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zPre=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"xPost=",0,"coordinates of the postStepPoint for the last step in the stride");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"yPost=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zPost=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energyStride=",0,"total energy on the stride (sum over all steps)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"particleCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"particleMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"particleID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"strideLength=",0,"stride length (sum over all steps length)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"timePre=",0,"time of preStepPoint for the first step in the stride");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"timePost=",0,"time of postStepPoint for the last step in the stride");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numberSteps=",0,"number of steps in the stride");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"strideOrdinal=",0,"stride order");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"parentTrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eventID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"runID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ActarSimDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ActarSimSciHit */
static void G__setup_memvarActarSimSciHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSciHit));
   { ActarSimSciHit *p; p=(ActarSimSciHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"type=",0,"crystal type");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"copy=",0,"crystal copy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"time=",0,"pulse time (w.r.t. vertex emission)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energy=",0,"total energy deposited");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"eventID=",0,"event ID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"runID=",0,"run ID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"particleID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"particleCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"particleMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ActarSimDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ActarSimSilHit */
static void G__setup_memvarActarSimSilHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSilHit));
   { ActarSimSilHit *p; p=(ActarSimSilHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"detectorID=",0,"Tracker model (depends on tracker geo)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"detCenterCoordinateX=",0,"center of the present silicon, dypang 090130");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"detCenterCoordinateY=",0,"center of the present silicon, dypang 090130");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"detCenterCoordinateZ=",0,"center of the present silicon, dypang 090130");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"xpos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ypos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zpos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"time=",0,"pulse time (w.r.t. vertex emission)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energy=",0,"total energy deposited");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eBeforeSil=",0,"energy before entering silicon");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"eAfterSil=",0,"energy left after silicon");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"trackID=",0,"track ID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"eventID=",0,"event ID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"runID=",0,"run ID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"particleID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"particleCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"particleMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"stepsContributing=",0,"neccessary for iterative means");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ActarSimDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ActarSimParisHit */
static void G__setup_memvarActarSimParisHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimParisHit));
   { ActarSimParisHit *p; p=(ActarSimParisHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"detectorID=",0,"Detector Identification");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"motherID=",0,"Mother volume (Cluster)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"xpos=",0,"X position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ypos=",0,"Y position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zpos=",0,"Z position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"time=",0,"time (w.r.t. vertex emission)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energy=",0,"total energy deposited");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"trackID=",0,"track ID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"eventID=",0,"event ID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"runID=",0,"run ID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"particleID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"particleCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"particleMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ActarSimDictLN_TString),-1,-1,4,"process_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ActarSimDictLN_TString),-1,-1,4,"detector_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ActarSimDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ActarSimPrimaryInfo */
static void G__setup_memvarActarSimPrimaryInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo));
   { ActarSimPrimaryInfo *p; p=(ActarSimPrimaryInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nbPrimariesInEvent=",0,"number of primaries in the event");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"kineticEnergy=",0,"kinetic energy ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"theta=",0,"theta emission angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"phi=",0,"phi emission angle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"PDGcode=",0,"datamembers copied from G4PrimaryParticle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Px=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Py=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"polX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"polY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"polZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Weight0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"properTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"x0=",0,"vertex position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"y0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"z0=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"eventID=",0,"event ID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"runID=",0,"run ID");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ActarSimDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ActarSimBeamInfo */
static void G__setup_memvarActarSimBeamInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimBeamInfo));
   { ActarSimBeamInfo *p; p=(ActarSimBeamInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energyEntrance=",0,"Energy at the entrance");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"energyVertex=",0,"Energy at the vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"thetaEntrance=",0,"theta emission angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"phiEntrance=",0,"phi emission angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"thetaVertex=",0,"theta vertex angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"phiVertex=",0,"phi vertex angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"xEntrance=",0,"beam entrance position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"yEntrance=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zEntrance=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"xVertex=",0,"reaction vertex position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"yVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"timeVertex=",0,"time at vertex");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"status=",0,"! (Does not move to file!)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ActarSimDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarActarSimDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncActarSimData(void) {
   /* ActarSimData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimData));
   G__memfunc_setup("ActarSimData",1166,G__ActarSimDict_215_0_1, 105, G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaPrim1",1247,G__ActarSimDict_215_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaPrim2",1248,G__ActarSimDict_215_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiPrim1",1034,G__ActarSimDict_215_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiPrim2",1035,G__ActarSimDict_215_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyPrim1",1363,G__ActarSimDict_215_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyPrim2",1364,G__ActarSimDict_215_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyOnGasPrim1",1835,G__ActarSimDict_215_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyOnGasPrim2",1836,G__ActarSimDict_215_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepSumLengthOnGasPrim1",2548,G__ActarSimDict_215_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepSumLengthOnGasPrim2",2549,G__ActarSimDict_215_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProtonLastPositionCode",2566,G__ActarSimDict_215_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "dypang 080302", (void*) NULL, 0);
   G__memfunc_setup("GetProtonLastPositionx",2307,G__ActarSimDict_215_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProtonLastPositiony",2308,G__ActarSimDict_215_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProtonLastPositionz",2309,G__ActarSimDict_215_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__ActarSimDict_215_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__ActarSimDict_215_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaPrim1",1259,G__ActarSimDict_215_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaPrim2",1260,G__ActarSimDict_215_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiPrim1",1046,G__ActarSimDict_215_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiPrim2",1047,G__ActarSimDict_215_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyPrim1",1375,G__ActarSimDict_215_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyPrim2",1376,G__ActarSimDict_215_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyOnGasPrim1",1847,G__ActarSimDict_215_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyOnGasPrim2",1848,G__ActarSimDict_215_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStepSumLengthOnGasPrim1",2560,G__ActarSimDict_215_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStepSumLengthOnGasPrim2",2561,G__ActarSimDict_215_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProtonLastPositionCode",2578,G__ActarSimDict_215_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pCode", "dypang 080302", (void*) NULL, 0);
   G__memfunc_setup("SetProtonLastPositionx",2319,G__ActarSimDict_215_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - PLP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProtonLastPositiony",2320,G__ActarSimDict_215_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - PLP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProtonLastPositionz",2321,G__ActarSimDict_215_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - PLP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventID",955,G__ActarSimDict_215_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunID",750,G__ActarSimDict_215_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ActarSimDict_215_0_34, 85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ActarSimData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ActarSimDict_215_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ActarSimDict_215_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ActarSimData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ActarSimDict_215_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ActarSimData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ActarSimDict_215_0_38, 85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ActarSimDict_215_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ActarSimDict_215_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ActarSimDict_215_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ActarSimDict_215_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ActarSimDict_215_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ActarSimDict_215_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ActarSimDict_215_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ActarSimData", 1166, G__ActarSimDict_215_0_46, (int) ('i'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimData), -1, 0, 1, 1, 1, 0, "u 'ActarSimData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ActarSimData", 1292, G__ActarSimDict_215_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ActarSimDict_215_0_48, (int) ('u'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimData), -1, 1, 1, 1, 1, 0, "u 'ActarSimData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncActarSimTrack(void) {
   /* ActarSimTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimTrack));
   G__memfunc_setup("ActarSimTrack",1289,G__ActarSimDict_216_0_1, 105, G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXCoord",879,G__ActarSimDict_216_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYCoord",880,G__ActarSimDict_216_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZCoord",881,G__ActarSimDict_216_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXPreCoord",1174,G__ActarSimDict_216_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYPreCoord",1175,G__ActarSimDict_216_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZPreCoord",1176,G__ActarSimDict_216_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyStep",1318,G__ActarSimDict_216_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__ActarSimDict_216_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParentTrackID",1548,G__ActarSimDict_216_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__ActarSimDict_216_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__ActarSimDict_216_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXCoord",891,G__ActarSimDict_216_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - xc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYCoord",892,G__ActarSimDict_216_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - yc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZCoord",893,G__ActarSimDict_216_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - zc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXPreCoord",1186,G__ActarSimDict_216_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - xc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYPreCoord",1187,G__ActarSimDict_216_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - yc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZPreCoord",1188,G__ActarSimDict_216_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - zc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyStep",1330,G__ActarSimDict_216_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackID",942,G__ActarSimDict_216_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParentTrackID",1560,G__ActarSimDict_216_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventID",955,G__ActarSimDict_216_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunID",750,G__ActarSimDict_216_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ActarSimDict_216_0_24, 85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ActarSimTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ActarSimDict_216_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ActarSimDict_216_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ActarSimTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ActarSimDict_216_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ActarSimTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ActarSimDict_216_0_28, 85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ActarSimDict_216_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ActarSimDict_216_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ActarSimDict_216_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ActarSimDict_216_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ActarSimDict_216_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ActarSimDict_216_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ActarSimDict_216_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ActarSimTrack", 1289, G__ActarSimDict_216_0_36, (int) ('i'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimTrack), -1, 0, 1, 1, 1, 0, "u 'ActarSimTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ActarSimTrack", 1415, G__ActarSimDict_216_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ActarSimDict_216_0_38, (int) ('u'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimTrack), -1, 1, 1, 1, 1, 0, "u 'ActarSimTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncActarSimSimpleTrack(void) {
   /* ActarSimSimpleTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSimpleTrack));
   G__memfunc_setup("ActarSimSimpleTrack",1907,G__ActarSimDict_217_0_1, 105, G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSimpleTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ActarSimDict_217_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__ActarSimDict_217_0_3, 117, G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSimpleTrack), -1, 1, 1, 1, 1, 0, "u 'ActarSimSimpleTrack' - 11 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXPre",671,G__ActarSimDict_217_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYPre",672,G__ActarSimDict_217_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZPre",673,G__ActarSimDict_217_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXPost",798,G__ActarSimDict_217_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYPost",799,G__ActarSimDict_217_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZPost",800,G__ActarSimDict_217_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyStride",1525,G__ActarSimDict_217_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleCharge",1694,G__ActarSimDict_217_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleMass",1512,G__ActarSimDict_217_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleID",1249,G__ActarSimDict_217_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStrideLength",1517,G__ActarSimDict_217_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimePre",982,G__ActarSimDict_217_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimePost",1109,G__ActarSimDict_217_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberSteps",1432,G__ActarSimDict_217_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStrideOrdinal",1620,G__ActarSimDict_217_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__ActarSimDict_217_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParentTrackID",1548,G__ActarSimDict_217_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__ActarSimDict_217_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__ActarSimDict_217_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXPre",683,G__ActarSimDict_217_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - xc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYPre",684,G__ActarSimDict_217_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - yc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZPre",685,G__ActarSimDict_217_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - zc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXPost",810,G__ActarSimDict_217_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - xc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYPost",811,G__ActarSimDict_217_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - yc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZPost",812,G__ActarSimDict_217_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - zc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyStride",1537,G__ActarSimDict_217_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleCharge",1706,G__ActarSimDict_217_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleMass",1524,G__ActarSimDict_217_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleID",1261,G__ActarSimDict_217_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStrideLength",1529,G__ActarSimDict_217_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimePre",994,G__ActarSimDict_217_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - te", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimePost",1121,G__ActarSimDict_217_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - te", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumberSteps",1444,G__ActarSimDict_217_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStrideOrdinal",1632,G__ActarSimDict_217_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackID",942,G__ActarSimDict_217_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParentTrackID",1560,G__ActarSimDict_217_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventID",955,G__ActarSimDict_217_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunID",750,G__ActarSimDict_217_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ActarSimDict_217_0_42, 85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ActarSimSimpleTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ActarSimDict_217_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimSimpleTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ActarSimDict_217_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ActarSimSimpleTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ActarSimDict_217_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ActarSimSimpleTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ActarSimDict_217_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ActarSimDict_217_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimSimpleTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ActarSimDict_217_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimSimpleTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ActarSimDict_217_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimSimpleTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ActarSimDict_217_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimSimpleTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ActarSimSimpleTrack", 1907, G__ActarSimDict_217_0_54, (int) ('i'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSimpleTrack), -1, 0, 1, 1, 1, 0, "u 'ActarSimSimpleTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ActarSimSimpleTrack", 2033, G__ActarSimDict_217_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncActarSimSciHit(void) {
   /* ActarSimSciHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSciHit));
   G__memfunc_setup("ActarSimSciHit",1368,G__ActarSimDict_218_0_1, 105, G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSciHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__ActarSimDict_218_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ty", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCopy",711,G__ActarSimDict_218_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - co", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__ActarSimDict_218_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ti", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__ActarSimDict_218_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventID",955,G__ActarSimDict_218_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunID",750,G__ActarSimDict_218_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleID",1261,G__ActarSimDict_218_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - pdgID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleCharge",1706,G__ActarSimDict_218_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pdgCharge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleMass",1524,G__ActarSimDict_218_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pdgMass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__ActarSimDict_218_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCopy",699,G__ActarSimDict_218_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__ActarSimDict_218_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__ActarSimDict_218_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__ActarSimDict_218_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__ActarSimDict_218_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleID",1249,G__ActarSimDict_218_0_17, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleCharge",1694,G__ActarSimDict_218_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleMass",1512,G__ActarSimDict_218_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__ActarSimDict_218_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ActarSimDict_218_0_21, 85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ActarSimSciHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ActarSimDict_218_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimSciHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ActarSimDict_218_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ActarSimSciHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ActarSimDict_218_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ActarSimSciHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ActarSimDict_218_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ActarSimDict_218_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimSciHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ActarSimDict_218_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimSciHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ActarSimDict_218_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimSciHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ActarSimDict_218_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimSciHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ActarSimSciHit", 1368, G__ActarSimDict_218_0_33, (int) ('i'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSciHit), -1, 0, 1, 1, 1, 0, "u 'ActarSimSciHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ActarSimSciHit", 1494, G__ActarSimDict_218_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ActarSimDict_218_0_35, (int) ('u'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSciHit), -1, 1, 1, 1, 1, 0, "u 'ActarSimSciHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncActarSimSilHit(void) {
   /* ActarSimSilHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSilHit));
   G__memfunc_setup("ActarSimSilHit",1377,G__ActarSimDict_219_0_1, 105, G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSilHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorID",1267,G__ActarSimDict_219_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetCenterCoordinateX",2314,G__ActarSimDict_219_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", "center of the present silicon, dypang 090130", (void*) NULL, 0);
   G__memfunc_setup("SetDetCenterCoordinateY",2315,G__ActarSimDict_219_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", "center of the present silicon, dypang 090130", (void*) NULL, 0);
   G__memfunc_setup("SetDetCenterCoordinateZ",2316,G__ActarSimDict_219_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", "center of the present silicon, dypang 090130", (void*) NULL, 0);
   G__memfunc_setup("SetXPos",694,G__ActarSimDict_219_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYPos",695,G__ActarSimDict_219_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZPos",696,G__ActarSimDict_219_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__ActarSimDict_219_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ti", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__ActarSimDict_219_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEBeforeSil",1260,G__ActarSimDict_219_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - eb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEAfterSil",1163,G__ActarSimDict_219_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ea", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackID",942,G__ActarSimDict_219_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventID",955,G__ActarSimDict_219_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunID",750,G__ActarSimDict_219_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleID",1261,G__ActarSimDict_219_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - pdgID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleCharge",1706,G__ActarSimDict_219_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pdgCharge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleMass",1524,G__ActarSimDict_219_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pdgMass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStepsContributing",2099,G__ActarSimDict_219_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorID",1255,G__ActarSimDict_219_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetCenterCoordinateX",2302,G__ActarSimDict_219_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "center of the present silicon, dypang 090130", (void*) NULL, 0);
   G__memfunc_setup("GetDetCenterCoordinateY",2303,G__ActarSimDict_219_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "center of the present silicon, dypang 090130", (void*) NULL, 0);
   G__memfunc_setup("GetDetCenterCoordinateZ",2304,G__ActarSimDict_219_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "center of the present silicon, dypang 090130", (void*) NULL, 0);
   G__memfunc_setup("GetXPos",682,G__ActarSimDict_219_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYPos",683,G__ActarSimDict_219_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZPos",684,G__ActarSimDict_219_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__ActarSimDict_219_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__ActarSimDict_219_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEBeforeSil",1248,G__ActarSimDict_219_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEAfterSil",1151,G__ActarSimDict_219_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__ActarSimDict_219_0_31, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__ActarSimDict_219_0_32, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__ActarSimDict_219_0_33, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleID",1249,G__ActarSimDict_219_0_34, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleCharge",1694,G__ActarSimDict_219_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleMass",1512,G__ActarSimDict_219_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepsContributing",2087,G__ActarSimDict_219_0_37, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__ActarSimDict_219_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ActarSimDict_219_0_39, 85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ActarSimSilHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ActarSimDict_219_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimSilHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ActarSimDict_219_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ActarSimSilHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ActarSimDict_219_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ActarSimSilHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ActarSimDict_219_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ActarSimDict_219_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimSilHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ActarSimDict_219_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimSilHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ActarSimDict_219_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimSilHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ActarSimDict_219_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimSilHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ActarSimSilHit", 1377, G__ActarSimDict_219_0_51, (int) ('i'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSilHit), -1, 0, 1, 1, 1, 0, "u 'ActarSimSilHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ActarSimSilHit", 1503, G__ActarSimDict_219_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ActarSimDict_219_0_53, (int) ('u'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimSilHit), -1, 1, 1, 1, 1, 0, "u 'ActarSimSilHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncActarSimParisHit(void) {
   /* ActarSimParisHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimParisHit));
   G__memfunc_setup("ActarSimParisHit",1592,G__ActarSimDict_220_0_1, 105, G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimParisHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorID",1267,G__ActarSimDict_220_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMotherID",1064,G__ActarSimDict_220_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXPos",694,G__ActarSimDict_220_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYPos",695,G__ActarSimDict_220_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZPos",696,G__ActarSimDict_220_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__ActarSimDict_220_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ti", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__ActarSimDict_220_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackID",942,G__ActarSimDict_220_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventID",955,G__ActarSimDict_220_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunID",750,G__ActarSimDict_220_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleID",1261,G__ActarSimDict_220_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - pdgID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleCharge",1706,G__ActarSimDict_220_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pdgCharge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleMass",1524,G__ActarSimDict_220_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pdgMass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProcessName",1420,G__ActarSimDict_220_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorName",1511,G__ActarSimDict_220_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorID",1255,G__ActarSimDict_220_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMotherID",1052,G__ActarSimDict_220_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXPos",682,G__ActarSimDict_220_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYPos",683,G__ActarSimDict_220_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZPos",684,G__ActarSimDict_220_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__ActarSimDict_220_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__ActarSimDict_220_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__ActarSimDict_220_0_24, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__ActarSimDict_220_0_25, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__ActarSimDict_220_0_26, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleID",1249,G__ActarSimDict_220_0_27, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleCharge",1694,G__ActarSimDict_220_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleMass",1512,G__ActarSimDict_220_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcessName",1408,G__ActarSimDict_220_0_30, 117, G__get_linked_tagnum(&G__ActarSimDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorName",1499,G__ActarSimDict_220_0_31, 117, G__get_linked_tagnum(&G__ActarSimDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ActarSimDict_220_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ActarSimDict_220_0_33, 85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ActarSimParisHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ActarSimDict_220_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimParisHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ActarSimDict_220_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ActarSimParisHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ActarSimDict_220_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ActarSimParisHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ActarSimDict_220_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ActarSimDict_220_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimParisHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ActarSimDict_220_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimParisHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ActarSimDict_220_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimParisHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ActarSimDict_220_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimParisHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ActarSimParisHit", 1592, G__ActarSimDict_220_0_45, (int) ('i'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimParisHit), -1, 0, 1, 1, 1, 0, "u 'ActarSimParisHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ActarSimParisHit", 1718, G__ActarSimDict_220_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ActarSimDict_220_0_47, (int) ('u'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimParisHit), -1, 1, 1, 1, 1, 0, "u 'ActarSimParisHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncActarSimPrimaryInfo(void) {
   /* ActarSimPrimaryInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo));
   G__memfunc_setup("ActarSimPrimaryInfo",1924,G__ActarSimDict_222_0_1, 105, G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ActarSimPrimaryInfo",1924,G__ActarSimDict_222_0_2, 105, G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo), -1, 0, 1, 1, 1, 0, "U 'G4PrimaryParticle' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbPrimariesInEvent",2101,G__ActarSimDict_222_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKineticEnergy",1617,G__ActarSimDict_222_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__ActarSimDict_222_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__ActarSimDict_222_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDGcode",918,G__ActarSimDict_222_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPx",488,G__ActarSimDict_222_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPy",489,G__ActarSimDict_222_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPz",490,G__ActarSimDict_222_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__ActarSimDict_222_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__ActarSimDict_222_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__ActarSimDict_222_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolX",675,G__ActarSimDict_222_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolY",676,G__ActarSimDict_222_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolZ",677,G__ActarSimDict_222_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeight",904,G__ActarSimDict_222_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProperTime",1319,G__ActarSimDict_222_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventID",943,G__ActarSimDict_222_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__ActarSimDict_222_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX0",424,G__ActarSimDict_222_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY0",425,G__ActarSimDict_222_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ0",426,G__ActarSimDict_222_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNbPrimariesInEvent",2113,G__ActarSimDict_222_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetKineticEnergy",1629,G__ActarSimDict_222_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - kin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__ActarSimDict_222_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__ActarSimDict_222_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDGcode",930,G__ActarSimDict_222_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - PDG", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPx",500,G__ActarSimDict_222_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPy",501,G__ActarSimDict_222_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPz",502,G__ActarSimDict_222_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackID",942,G__ActarSimDict_222_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMass",704,G__ActarSimDict_222_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__ActarSimDict_222_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolX",687,G__ActarSimDict_222_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolY",688,G__ActarSimDict_222_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolZ",689,G__ActarSimDict_222_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWeight",916,G__ActarSimDict_222_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProperTime",1331,G__ActarSimDict_222_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventID",955,G__ActarSimDict_222_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - eID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunID",750,G__ActarSimDict_222_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - rID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX0",436,G__ActarSimDict_222_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY0",437,G__ActarSimDict_222_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ0",438,G__ActarSimDict_222_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertexPosition",1791,G__ActarSimDict_222_0_45, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__ActarSimDict_222_0_46, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set4Momentum",1202,G__ActarSimDict_222_0_47, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz d - 'Double_t' 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolarization",1576,G__ActarSimDict_222_0_48, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__ActarSimDict_222_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ActarSimDict_222_0_50, 85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ActarSimPrimaryInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ActarSimDict_222_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimPrimaryInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ActarSimDict_222_0_52, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ActarSimPrimaryInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ActarSimDict_222_0_53, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ActarSimPrimaryInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ActarSimDict_222_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ActarSimDict_222_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimPrimaryInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ActarSimDict_222_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimPrimaryInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ActarSimDict_222_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimPrimaryInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ActarSimDict_222_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimPrimaryInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ActarSimPrimaryInfo", 1924, G__ActarSimDict_222_0_62, (int) ('i'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo), -1, 0, 1, 1, 1, 0, "u 'ActarSimPrimaryInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ActarSimPrimaryInfo", 2050, G__ActarSimDict_222_0_63, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ActarSimDict_222_0_64, (int) ('u'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimPrimaryInfo), -1, 1, 1, 1, 1, 0, "u 'ActarSimPrimaryInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncActarSimBeamInfo(void) {
   /* ActarSimBeamInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimBeamInfo));
   G__memfunc_setup("ActarSimBeamInfo",1557,G__ActarSimDict_223_0_1, 105, G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimBeamInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyEntrance",1722,G__ActarSimDict_223_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyVertex",1544,G__ActarSimDict_223_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaEntrance",1606,G__ActarSimDict_223_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiEntrance",1393,G__ActarSimDict_223_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaVertex",1428,G__ActarSimDict_223_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiVertex",1215,G__ActarSimDict_223_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXEntrance",1192,G__ActarSimDict_223_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYEntrance",1193,G__ActarSimDict_223_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZEntrance",1194,G__ActarSimDict_223_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXVertex",1014,G__ActarSimDict_223_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYVertex",1015,G__ActarSimDict_223_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZVertex",1016,G__ActarSimDict_223_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeVertex",1325,G__ActarSimDict_223_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatus",932,G__ActarSimDict_223_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyEntrance",1734,G__ActarSimDict_223_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergyVertex",1556,G__ActarSimDict_223_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaEntrance",1618,G__ActarSimDict_223_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiEntrance",1405,G__ActarSimDict_223_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaVertex",1440,G__ActarSimDict_223_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiVertex",1227,G__ActarSimDict_223_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXEntrance",1204,G__ActarSimDict_223_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYEntrance",1205,G__ActarSimDict_223_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZEntrance",1206,G__ActarSimDict_223_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXVertex",1026,G__ActarSimDict_223_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYVertex",1027,G__ActarSimDict_223_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZVertex",1028,G__ActarSimDict_223_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeVertex",1337,G__ActarSimDict_223_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStatus",944,G__ActarSimDict_223_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionEntrance",1969,G__ActarSimDict_223_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAnglesEntrance",1718,G__ActarSimDict_223_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionVertex",1791,G__ActarSimDict_223_0_32, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAnglesVertex",1540,G__ActarSimDict_223_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__ActarSimDict_223_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ActarSimDict_223_0_35, 85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ActarSimBeamInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ActarSimDict_223_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimBeamInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ActarSimDict_223_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ActarSimBeamInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ActarSimDict_223_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ActarSimBeamInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ActarSimDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ActarSimDict_223_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ActarSimDict_223_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimBeamInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ActarSimDict_223_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimBeamInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ActarSimDict_223_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ActarSimBeamInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ActarSimDict_223_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ActarSimBeamInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ActarSimBeamInfo", 1557, G__ActarSimDict_223_0_47, (int) ('i'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimBeamInfo), -1, 0, 1, 1, 1, 0, "u 'ActarSimBeamInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ActarSimBeamInfo", 1683, G__ActarSimDict_223_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ActarSimDict_223_0_49, (int) ('u'), G__get_linked_tagnum(&G__ActarSimDictLN_ActarSimBeamInfo), -1, 1, 1, 1, 1, 0, "u 'ActarSimBeamInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncActarSimDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalActarSimDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcActarSimDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ActarSimDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ActarSimDictLN_ActarSimData = { "ActarSimData" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_ActarSimTrack = { "ActarSimTrack" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_ActarSimSimpleTrack = { "ActarSimSimpleTrack" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_ActarSimSciHit = { "ActarSimSciHit" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_ActarSimSilHit = { "ActarSimSilHit" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_ActarSimParisHit = { "ActarSimParisHit" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_G4PrimaryParticle = { "G4PrimaryParticle" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_ActarSimPrimaryInfo = { "ActarSimPrimaryInfo" , 99 , -1 };
G__linked_taginfo G__ActarSimDictLN_ActarSimBeamInfo = { "ActarSimBeamInfo" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableActarSimDict() {
  G__ActarSimDictLN_TClass.tagnum = -1 ;
  G__ActarSimDictLN_TBuffer.tagnum = -1 ;
  G__ActarSimDictLN_TMemberInspector.tagnum = -1 ;
  G__ActarSimDictLN_TObject.tagnum = -1 ;
  G__ActarSimDictLN_TString.tagnum = -1 ;
  G__ActarSimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ActarSimDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ActarSimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ActarSimDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ActarSimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ActarSimDictLN_ActarSimData.tagnum = -1 ;
  G__ActarSimDictLN_ActarSimTrack.tagnum = -1 ;
  G__ActarSimDictLN_ActarSimSimpleTrack.tagnum = -1 ;
  G__ActarSimDictLN_ActarSimSciHit.tagnum = -1 ;
  G__ActarSimDictLN_ActarSimSilHit.tagnum = -1 ;
  G__ActarSimDictLN_ActarSimParisHit.tagnum = -1 ;
  G__ActarSimDictLN_G4PrimaryParticle.tagnum = -1 ;
  G__ActarSimDictLN_ActarSimPrimaryInfo.tagnum = -1 ;
  G__ActarSimDictLN_ActarSimBeamInfo.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableActarSimDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_TString);
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ActarSimDictLN_ActarSimData),sizeof(ActarSimData),-1,1280,"ROOT CINT",G__setup_memvarActarSimData,G__setup_memfuncActarSimData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ActarSimDictLN_ActarSimTrack),sizeof(ActarSimTrack),-1,1280,"ROOT CINT",G__setup_memvarActarSimTrack,G__setup_memfuncActarSimTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ActarSimDictLN_ActarSimSimpleTrack),sizeof(ActarSimSimpleTrack),-1,32000,"ROOT CINT",G__setup_memvarActarSimSimpleTrack,G__setup_memfuncActarSimSimpleTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ActarSimDictLN_ActarSimSciHit),sizeof(ActarSimSciHit),-1,29952,"ROOT CINT",G__setup_memvarActarSimSciHit,G__setup_memfuncActarSimSciHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ActarSimDictLN_ActarSimSilHit),sizeof(ActarSimSilHit),-1,29952,"ROOT CINT",G__setup_memvarActarSimSilHit,G__setup_memfuncActarSimSilHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ActarSimDictLN_ActarSimParisHit),sizeof(ActarSimParisHit),-1,29952,"ROOT CINT",G__setup_memvarActarSimParisHit,G__setup_memfuncActarSimParisHit);
   G__get_linked_tagnum_fwd(&G__ActarSimDictLN_G4PrimaryParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ActarSimDictLN_ActarSimPrimaryInfo),sizeof(ActarSimPrimaryInfo),-1,62720,"ROOT CINT    ",G__setup_memvarActarSimPrimaryInfo,G__setup_memfuncActarSimPrimaryInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ActarSimDictLN_ActarSimBeamInfo),sizeof(ActarSimBeamInfo),-1,29952,"ROOT CINT",G__setup_memvarActarSimBeamInfo,G__setup_memfuncActarSimBeamInfo);
}
extern "C" void G__cpp_setupActarSimDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupActarSimDict()");
  G__set_cpp_environmentActarSimDict();
  G__cpp_setup_tagtableActarSimDict();

  G__cpp_setup_inheritanceActarSimDict();

  G__cpp_setup_typetableActarSimDict();

  G__cpp_setup_memvarActarSimDict();

  G__cpp_setup_memfuncActarSimDict();
  G__cpp_setup_globalActarSimDict();
  G__cpp_setup_funcActarSimDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncActarSimDict();
  return;
}
class G__cpp_setup_initActarSimDict {
  public:
    G__cpp_setup_initActarSimDict() { G__add_setup_func("ActarSimDict",(G__incsetup)(&G__cpp_setupActarSimDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initActarSimDict() { G__remove_setup_func("ActarSimDict"); }
};
G__cpp_setup_initActarSimDict G__cpp_setup_initializerActarSimDict;

